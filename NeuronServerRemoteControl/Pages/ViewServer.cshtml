@page
@model NeuronServerRemoteControl.Pages.ViewServerModel
@{
    String serverName = ViewData["ServerName"].ToString();
}

<style>
    .flexCenter {
        display: flex;
        align-items: center;
        justify-content: flex-end;
    }

    .sendButton {
        width: 38px;
        height: 38px;
        cursor: pointer;
    }

        .sendButton:active,
        .sendButton:focus {
            zoom: 0.9;
        }

    .commandBlock {
        margin-bottom: 10px;
    }

        .commandBlock .commandInfo {
            border: 1px solid #bdbdbd;
            border-radius: 30px;
            padding: 20px;
        }

            .commandBlock .commandInfo p {
                margin: 0px;
            }


    .isInvalid {
        border-color: #dc3545;
    }

        .isInvalid:focus {
            border-color: #dc3545;
            box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
        }
    }
</style>

<form class="form-horizontal" method="post" id="formSend">
    @Html.HiddenFor(m => m.ServerName)
    <div class="form-row">
        <label for="Name" style="font-weight: bold;" class="col-md-12">Текст команды</label>
        <div class="form-group col-md-11 col-8" style=" ">
            <input type="text" class="form-control" name="CommandText" id="CommandText" autocomplete="off">
        </div>
        <div class="form-group col-md-1 flexCenter">
            <img src="~/img/send.png" class="sendButton" onclick="sendCommand()" title="Отправить команду" />
        </div>
    </div>

</form>
<h4 class="text-center">Предыдущие запросы</h4>
<div id="commandList">

    @if (Model.SentCommandsCount > 0)
    {
        @foreach (var item in Model.SentCommands)
        {
            <div class="row commandBlock">
                <div class="col-md-11 commandInfo">
                    <div class="row">
                        <p class="col-md-6">@item.CommandText</p>
                        <p class="col-md-6 text-right">@item.CreateDate.ToString("dd.MM.yyyy HH:mm:ss")</p>
                        <p class="col-md-12">@(!String.IsNullOrEmpty(item.ResponseText) ? Html.Raw(item.ResponseText.Replace("\n","<br>")) : Html.Raw("ответ не получен"))</p>
                    </div>
                </div>
                <div class="col-md-1 flexCenter">
                    <img src="/img/send.png" class="sendButton" onclick="sendCommand('@item.CommandText')" title="Отправить команду снова">
                </div>
            </div>
        }
    }
    else
    {
        <p id="notRequest">Запросов нет</p>
    }

</div>


<div class="LoadPanel hideLP">
    <div class="overlay"></div>
    <div class="spinner"></div>
</div>

<script>

    $(document).ready(function ()
    {
       // reloadCommands();
        document.onkeypress = stopRKey;
        $("#CommandText").on("input", function ()
        {
            $(this).removeClass("isInvalid");
        });
    });

    //Перегрузка Enter-a
    function stopRKey(evt)
    {
        var evt = (evt) ? evt : ((event) ? event : null);
        var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);
        if ((evt.keyCode == 13) && (node.type == "text")) { sendCommand(); return false; }
    }

    //Перезагрузить список команд
    function reloadCommands()
    {
        $(".LoadPanel").removeClass("hideLP").addClass("showLP");
        var jsonData = { "passedObject": '\"@serverName\"' };
        $.ajax({
            type: 'GET',
            url: "/ViewServer?handler=ListCommand",
            contentType: 'application/json; charset=utf-8"',
            data: jsonData,
            success: function (result)
            {
                $("#commandList").html(result);
                $(".LoadPanel").removeClass("showLP").addClass("hideLP");
            },
            error: function (error)
            {
                console.log(error);
                $(".LoadPanel").removeClass("showLP").addClass("hideLP");
            }
        });
    }

    //Отправить команду
    function sendCommand(text)
    {
        if (text != null)
            $("#CommandText").val(text);

        if (!isEmpty($("#CommandText").val()))
        {
            $(".LoadPanel").removeClass("hideLP").addClass("showLP");
            $.ajax({
                type: 'POST',
                url: "",
                data: $('#formSend').serialize(),
                success: function (result)
                {
                    $("#CommandText").val("");

                    var command = JSON.parse(result);
                    let blockCommand =
                    "<div class='row commandBlock'>" +
                        "<div class='col-md-11 commandInfo'>" +
                            "<div class='row'>" +
                                "<p class='col-md-6'>" + command.CommandText + "</p>" +
                                "<p class='col-md-6 text-right'>" + command.CreateDate + "</p>" +
                                "<p class='col-md-12'>" + (!isEmpty(command.ResponseText)? command.ResponseText.replace(/\n/g, "<br>") : "ответ не получен") + "</p>" +
                            "</div>" +
                        "</div>" +
                        "<div class='col-md-1 flexCenter'>" +
                            "<img src='/img/send.png' class='sendButton' onclick='sendCommand(\'" + command.CommandText + "\')' title='Отправить команду снова'>" +
                        "</div>" +
                    "</div>"

                    $("#notRequest").remove();
                    $("#commandList").prepend(blockCommand);

                    $(".LoadPanel").removeClass("showLP").addClass("hideLP");
                },
                error: function (error)
                {
                    console.log(error);
                    $(".LoadPanel").removeClass("showLP").addClass("hideLP");
                }
            });
        } else
            $("#CommandText").addClass("isInvalid");

        //$.post('', $('#formSend').serialize())
    }

</script>
